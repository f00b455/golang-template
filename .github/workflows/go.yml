name: Go CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: "1.21"

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --no-config

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install dependencies
      run: go mod download

    - name: Build binaries for BDD tests
      run: |
        go build -o bin/api-server ./cmd/api
        go build -o bin/cli-tool ./cmd/cli
        go build -o bin/web-server ./cmd/web

    - name: Run unit tests
      run: go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
      if: always()

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install dependencies
      run: go mod download

    - name: Build API server
      run: go build -o bin/api-server ./cmd/api

    - name: Build CLI tool
      run: go build -o bin/cli-tool ./cmd/cli

    - name: Build Web server
      run: go build -o bin/web-server ./cmd/web

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: bin/

  validate:
    name: Full Validation
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    steps:
    - name: Validation Complete
      run: echo "All validation checks passed!"