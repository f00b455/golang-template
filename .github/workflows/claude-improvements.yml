name: Claude Code Improvements

on:
  workflow_run:
    workflows: ["Claude Code Review"]
    types:
      - completed

jobs:
  improve-code:
    runs-on: ubuntu-latest
    # Only run after Claude Code Review completes successfully
    if: github.event.workflow_run.conclusion == 'success'

    permissions:
      contents: write
      pull-requests: write
      id-token: write

    steps:
      - name: Get PR number from workflow run context
        id: pr
        run: |
          # Get PR data from the workflow run that triggered this workflow
          # The workflow_run event includes pull_requests data directly
          PR_DATA=$(gh api /repos/${{ github.repository }}/actions/runs/${{ github.event.workflow_run.id }} --jq '.pull_requests')

          if [[ "$PR_DATA" == "[]" ]] || [[ -z "$PR_DATA" ]]; then
            echo "No PR found for workflow run ID: ${{ github.event.workflow_run.id }}"
            echo "Workflow run head SHA: ${{ github.event.workflow_run.head_sha }}"
            echo "Workflow run head branch: ${{ github.event.workflow_run.head_branch }}"
            exit 1
          fi

          # Extract the first PR number from the pull_requests array
          PR_NUMBER=$(echo "$PR_DATA" | jq -r '.[0].number')

          if [[ -z "$PR_NUMBER" ]] || [[ "$PR_NUMBER" == "null" ]]; then
            echo "Failed to extract PR number from workflow run data"
            echo "PR_DATA: $PR_DATA"
            exit 1
          fi

          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "Found PR #$PR_NUMBER from workflow run context"
          echo "Workflow run ID: ${{ github.event.workflow_run.id }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Fetch PR branch
        run: |
          gh pr checkout ${{ steps.pr.outputs.PR_NUMBER }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post automation status comment
        run: |
          gh pr comment ${{ steps.pr.outputs.PR_NUMBER }} --body "
          # ü§ñ‚ö° **CLAUDE CODE AUTOMATION RUNNING** ‚ö°ü§ñ

          ```
          ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
          ‚ïë  üî¥üü°üü¢ ACTIVE AUTOMATION IN PROGRESS üü¢üü°üî¥  ‚ïë
          ‚ïë              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê              ‚ïë
          ‚ïë              ‚îÇ ‚ö° PROCESSING ‚ö° ‚îÇ              ‚ïë
          ‚ïë              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò              ‚ïë
          ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
          ```

          üîÑ **Status**: **RUNNING** ‚ö°‚ö°‚ö°
          üìä **Workflow**: [üîó View Live Progress](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          ‚è∞ **Started**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          üéØ **Action**: Implementing review feedback automatically

          ---

          > ü§ñ **Automated by Claude Code Pipeline**
          > *This comment will be updated when automation completes*

          ```
          [‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà] üöÄ DEPLOYING FIXES...
          ```"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get review content
        id: review
        run: |
          REVIEW_CONTENT=$(gh pr view ${{ steps.pr.outputs.PR_NUMBER }} --json comments --jq '.comments[] | select(.author.login == "claude") | .body' | tail -1)
          echo "REVIEW_CONTENT<<EOF" >> $GITHUB_OUTPUT
          echo "$REVIEW_CONTENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Claude Code to implement review feedback
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            You are working EXCLUSIVELY on PR #${{ steps.pr.outputs.PR_NUMBER }}. DO NOT work on any other PR or issue.

            CRITICAL: Only make changes to PR #${{ steps.pr.outputs.PR_NUMBER }} - the branch you are currently on.

            Task: Implement the code review feedback for PR #${{ steps.pr.outputs.PR_NUMBER }}.

            CODE REVIEW FEEDBACK TO IMPLEMENT:
            ${{ steps.review.outputs.REVIEW_CONTENT }}

            Steps:
            1. Verify you're on the correct PR branch: git branch --show-current
            2. Read the files in the current branch and identify the issues mentioned in the review feedback above
            3. Implement ALL the requested changes from the review
            4. Work ONLY on files in the current branch - do not reference other PRs or branches
            5. Test your changes: make test
            6. Commit your changes to THIS PR branch: git add -A && git commit -m "improve: implement code review feedback for PR #${{ steps.pr.outputs.PR_NUMBER }}" && git push

            CRITICAL RESTRICTIONS:
            - You are working EXCLUSIVELY on PR #${{ steps.pr.outputs.PR_NUMBER }}
            - DO NOT post any reviews or comments to ANY PR
            - DO NOT use gh pr comment, gh pr review, or any PR comment/review commands
            - ONLY modify files in the current branch using Read, Edit, Write, MultiEdit tools
            - Your job is to implement changes, not to provide reviews or feedback

          claude_args: '--allowed-tools "Read,Edit,Write,MultiEdit,Bash(git:*),Bash(make:*),Bash(go:*)"'

      - name: Signal Pipeline Orchestrator
        if: always()
        run: |
          # Add a label to signal the orchestrator that improvements are complete
          PR_NUMBER="${{ steps.pr.outputs.PR_NUMBER }}"

          if [[ "${{ job.status }}" == "success" ]]; then
            gh pr comment $PR_NUMBER --body "‚úÖ **Improvements Applied**: Code review feedback has been implemented and committed.

            The pipeline orchestrator will now re-run tests to verify the changes."
          else
            gh pr comment $PR_NUMBER --body "‚ö†Ô∏è **Improvements Failed**: Unable to apply code review feedback automatically.

            Manual intervention may be required. Check the [workflow logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}