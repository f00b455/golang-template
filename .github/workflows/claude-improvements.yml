name: Claude Code Improvements

on:
  workflow_run:
    workflows: ["Claude Code Review"]
    types:
      - completed

jobs:
  improve-code:
    runs-on: ubuntu-latest
    # Only run after Claude Code Review completes successfully
    if: github.event.workflow_run.conclusion == 'success'

    permissions:
      contents: write
      pull-requests: write
      id-token: write

    steps:
      - name: Get PR number from workflow name
        id: pr
        run: |
          WORKFLOW_NAME="${{ github.event.workflow_run.name }}"
          echo "Workflow name: $WORKFLOW_NAME"

          # Extract PR number from workflow name pattern: "Title #123"
          PR_NUMBER=$(echo "$WORKFLOW_NAME" | grep -oE '#[0-9]+' | grep -oE '[0-9]+' | head -1)

          if [[ -z "$PR_NUMBER" ]]; then
            echo "No PR number found in workflow name: $WORKFLOW_NAME"
            exit 1
          fi

          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "Found PR #$PR_NUMBER from workflow name"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout PR
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Fetch PR branch
        run: |
          gh pr checkout ${{ steps.pr.outputs.PR_NUMBER }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post automation status comment
        run: |
          gh pr comment ${{ steps.pr.outputs.PR_NUMBER }} --body "
          # 🤖⚡ **CLAUDE CODE AUTOMATION RUNNING** ⚡🤖

          ```
          ╔══════════════════════════════════════════════╗
          ║  🔴🟡🟢 ACTIVE AUTOMATION IN PROGRESS 🟢🟡🔴  ║
          ║              ┌─────────────────┐              ║
          ║              │ ⚡ PROCESSING ⚡ │              ║
          ║              └─────────────────┘              ║
          ╚══════════════════════════════════════════════╝
          ```

          🔄 **Status**: **RUNNING** ⚡⚡⚡
          📊 **Workflow**: [🔗 View Live Progress](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          ⏰ **Started**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
          🎯 **Action**: Implementing review feedback automatically

          ---

          > 🤖 **Automated by Claude Code Pipeline**
          > *This comment will be updated when automation completes*

          ```
          [████████████████████████████████████████] 🚀 DEPLOYING FIXES...
          ```"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get review content
        id: review
        run: |
          REVIEW_CONTENT=$(gh pr view ${{ steps.pr.outputs.PR_NUMBER }} --json comments --jq '.comments[] | select(.author.login == "claude") | .body' | tail -1)
          echo "REVIEW_CONTENT<<EOF" >> $GITHUB_OUTPUT
          echo "$REVIEW_CONTENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Claude Code to implement review feedback
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          prompt: |
            You are working EXCLUSIVELY on PR #${{ steps.pr.outputs.PR_NUMBER }}. DO NOT work on any other PR or issue.

            CRITICAL: Only make changes to PR #${{ steps.pr.outputs.PR_NUMBER }} - the branch you are currently on.

            Task: Implement the code review feedback for PR #${{ steps.pr.outputs.PR_NUMBER }}.

            CODE REVIEW FEEDBACK TO IMPLEMENT:
            ${{ steps.review.outputs.REVIEW_CONTENT }}

            Steps:
            1. Verify you're on the correct PR branch: git branch --show-current
            2. Read the files in the current branch and identify the issues mentioned in the review feedback above
            3. Implement ALL the requested changes from the review
            4. Work ONLY on files in the current branch - do not reference other PRs or branches
            5. Test your changes: make test
            6. Commit your changes to THIS PR branch: git add -A && git commit -m "improve: implement code review feedback for PR #${{ steps.pr.outputs.PR_NUMBER }}" && git push

            CRITICAL RESTRICTIONS:
            - You are working EXCLUSIVELY on PR #${{ steps.pr.outputs.PR_NUMBER }}
            - DO NOT post any reviews or comments to ANY PR
            - DO NOT use gh pr comment, gh pr review, or any PR comment/review commands
            - ONLY modify files in the current branch using Read, Edit, Write, MultiEdit tools
            - Your job is to implement changes, not to provide reviews or feedback

          claude_args: '--allowed-tools "Read,Edit,Write,MultiEdit,Bash(git:*),Bash(make:*),Bash(go:*)" --blocked-tools "Bash(gh:*)"'